<pre>
BUIP005: Settings information via coinbase-txn & user-agent
Proposer: Andrew Clifford
Status: Passed
Submitted on: 2015-12-31
Revision 1, user-agent, 2016-01-07
</pre>
'''Summary<br />
'''<br />
The Bitcoin Unlimited client for full-node owners has user configurable settings for the ''Excessive Block Size'' and ''Excessive Acceptance Depth'' (EBS &amp; EAD) which are the low-level rules implemented by BUIP001. When used in the Bitcoin network an emergent block size limit becomes effective across all connected nodes.<br />
<br />
Mining nodes also use the ''Maximum Generate Size'' (MGS) for their mining block limit. It is usually set smaller than the EBS. BUIP002 will propose the addition of a ''Future Generate Size''and ''Proposed Activation Block Height'' (FGS &amp; ABH) where miners can signal their intention to increase (or decrease) their mining limit in the future. The ABH is always a multiple of 12000. It is considered that miners should not need to co-ordinate MGS changes more frequently than every 12 weeks.<br />
<br />
While these settings are individual, and will vary, the network benefits when values are more consistent across many nodes. Consistency reduces the number of nodes which are not fully participating in the network where they have recently received an excessive block.<br />
<br />
Two methods for increasing transparency, apart from adding message types for polling nodes, are proposed here. First, for miners to reveal their settings in mined blocks. Secondly, for both mining and non-mining nodes to reveal their excessive block settings in the user-agent subversion string which qualifies the software identifier, &quot;BitcoinUnlimited&quot;, to connecting peers. All BU full node owners are incentivized to allow the software to do this because a healthier network supports a higher BTC price and this provides higher revenue for miners, and capital gain for non-miners.<br />
<br />
It is considered that the use of the user-agent is appropriate for individiualized settings which feed into a high-order network consensus.<br />
<br />
In reality, the settings information reported on some blocks may be deliberately erroneous.<br />
Users of these fields must understand that they are not authoritative -- a miner could lie about these limits. However, miners have a mutual incentive to be honest because orphaning a block from a particular miner does not increase the likelihood that other miners will subsequently mine a block -- block discovery is independent. Lying would only affect other miner's profitability long term via the difficulty adjustment process (orphans are not counted when difficulty is calculated). But a miner lying about block size acceptance will only work once, so the actual effect on the difficulty will be negligible.<br />
Similarly, some node owners may provide spurious excessive block setting information in the user-agent, requiring filtering out by up-time, ip-address duplication, etc to improve results.<br />
<br />
Websites such as bitcoinunlimited.info can show analysis of these metrics so that BU users may choose their EBS &amp; EAD settings more consistently with the network as a whole. Similarly miners can make their MGS setting more consistent.<br />
'''<br />
The following extension is proposed for the Bitcoin client:'''<br />
<br />
1. That by default the BU mined blocks carry excessive settings information in the txn-input (scriptSig) of the coinbase-txn (which carries the miner reward).<br />
<br />
Delimiter '/' (forward-slash), flexible ordering, see note (i) for Float representation

# AD (for EAD) Integer
# BV (for FGS if BIP100 emulation active) Float, see note (ii)
# EB (for EBS) Float
# FG (for FGS if BIP100 emulation inactive [default]) Float, see note (iii)
# MG (for MGS) Float

Example: /MG2.0/EB3.5/AD4/<br />
<br />
It is recommended that this comprise one commit &quot;BUIP005 Settings info coinbase&quot;<br />
----------------------------------------------<br />
<br />
2. That by default the BU user-agent subversion carry the excessive block settings EB &amp; AD, which are defined above. The subversion format adheres to the recognized convention of using parentheses, and a ';' (semi-colon) delimiter. AD values &gt;9999999 to be shown as that value (about 190 years of blocks).<br />
<br />
Example: /BitcoinUnlimited:0.11.2(EB3.5;AD4)/<br />
<br />
It is recommended that this comprise one commit &quot;BUIP005 Settings info user-agent&quot;<br />
----------------------------------------------<br />
<br />
Note (i)<br />
Float numbers<br />
While BU allows for larger blocks it strongly adheres to the convention that block-space should not be wasted. Settings information is to be efficiently represented by default while preserving human readability. So, float values are in megabytes rounded ''down'' to 1dp. Miners may optionally change this to provide greater precision. If a float value is parsed &gt;= 100,000 then it should be assumed as bytes.<br />
<br />
Note (ii)<br />
BIP100 Block Votes<br />
The BIP100 emulation defined in BUIP002 makes use of the FGS for block voting where a vote count occurs at block numbers which are multiples of 12000. BV tag is written if BIP100 activated &amp; ABH == next block for BIP100 vote counting, otherwise an FG tag is written.<br />
BV and FG are mutually exclusive<br />
<br />
Example: /MG2.0/EB3.5/AD4/BV5.5/<br />
<br />
Note (iii)<br />
FG value qualification<br />
Future generate size may be suffixed with a qualifier to represent the Proposed Activation Block Height. The qualifier begins &quot;@&quot; (at symbol) and is (ABH - current blockchain height) / 12000 rounded up to 0dp. Results &lt;=0 are ignored, and no FG tag is written if FGS == 0.<br />
<br />
Example: /MG2.0/EB3.5/AD4/FG5.5@3/

